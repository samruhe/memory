{"version":3,"sources":["components/modals/DifficultyModal.js","header/Header.js","components/Card.js","components/Commands.js","components/modals/GameOverModal.js","components/Game.js","App.js","index.js"],"names":["DifficultyModal","_ref","show","pickLevel","react_default","a","createElement","id","className","style","display","onClick","Header","Card","isFlipped","handleClick","cardNumber","classN","styles","background","concat","Commands","hasCompleted","restart","changeDiff","GameOverModal","moves","time","close","seconds","toFixed","Game","state","Array","_this","props","numCards","fill","shuffledCard","duplicateCard","sort","Math","random","clickCount","moveCount","prevSelectedCard","prevCardId","isDisabled","hasWon","completed","level","timeStart","timeEnd","timerStarted","event","preventDefault","start","Date","getTime","setState","cardId","target","newFlips","slice","prevState","newCard","previousCard","isCardMatch","prevCard","newCardId","hideCard","setTimeout","didWin","end","flipBack","restartGame","found","i","length","closeModalHandler","_this2","this","pointerEvents","numCols","map","index","components_Card","key","components_Commands","modals_GameOverModal","React","Component","reduce","preValue","current","array","App","numColumns","modals_DifficultyModal","header_Header","renderLevelChoice","components_Game","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.a55a4152.chunk.js","sourcesContent":["import React from 'react'\nimport '../../styles/Modal.css'\n\nfunction DifficultyModal({show, pickLevel}) {\n    return (\n        <div>\n            <div \n                id=\"myModal\" \n                className=\"modal\"\n                style = {{\n                    display: show ? 'block' : 'none'\n                }}\n            >\n                <div className=\"modal-content\">\n                    <div>\n                        <h2>Pick a Difficulty</h2>\n                        <button id=\"easy\" onClick={pickLevel}>Easy</button>\n                        <button id=\"med\" onClick={pickLevel}>Medium</button>\n                        <button id=\"hard\" onClick={pickLevel}>Hard</button>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default DifficultyModal","import React from 'react'\n\nfunction Header() {\n    return (\n        <div className=\"grid-header-container\">\n            <h1>Matchy Matchy</h1>\n        </div>\n    )\n}\n\nexport default Header","import React from 'react'\n\nfunction Card({id, isFlipped, handleClick, cardNumber}) {\n    var classN = \"\"\n    var styles = {}\n    \n    if(isFlipped) {\n        classN = \"card card-back\"\n        styles = {background: cardNumber}\n    } else {\n        classN = \"card card-front\"\n    }\n\n    return (\n        <button \n            id={id} \n            className={`${classN} ${cardNumber !== -1 ? \"\" : \"hide-card\"}`}\n            onClick={handleClick}\n            style={styles}\n        ></button>\n    )\n}\n\nexport default Card","import React from 'react'\n\nfunction Commands({hasCompleted, restart, changeDiff}) {\n    return (\n        <div className=\"commands\">\n            <button id=\"changeDiff\" onClick={changeDiff}>Change Difficulty</button>\n            <button id=\"restart\" onClick={restart}>{hasCompleted ? \"Play Again\" : \"Restart\"}</button>\n        </div>\n    )\n}\n\nexport default Commands","import React from 'react'\nimport '../../styles/Modal.css'\n\nfunction GameOverModal({show, moves, time, close}) {\n    const seconds = time / 1000\n    return (\n        <div>\n            <div \n                id=\"myModal\" \n                className=\"modal\"\n                style = {{\n                    display: show ? 'block' : 'none'\n                }}\n            >\n                <div className=\"modal-content\">\n                    <span className=\"close\" onClick={close}>&times;</span>\n                    <h2>Congratulations</h2>\n                    <div>\n                        <p>You won in {moves} moves and finished in {seconds.toFixed(2)} seconds!</p>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default GameOverModal","import React from 'react'\nimport Card from './Card'\nimport Commands from './Commands'\nimport GameOver from './modals/GameOverModal'\n\nclass Game extends React.Component {\n    state = {\n        isFlipped: Array(this.props.numCards).fill(false),\n        shuffledCard: Game.duplicateCard(this.props.numCards).sort(() => Math.random() - 0.5),\n        clickCount: 1,\n        moveCount: 0,\n        prevSelectedCard: -1,\n        prevCardId: -1,\n        isDisabled: false,       // clicking disabled when two cards selected\n        hasWon: false,           // displaying winning modal\n        completed: false,        // displaying button text when game finished\n        level: -1,               // -1 none, 0 easy, 1 med, 2 hard\n        timeStart: 0,            // time when first card clicked\n        timeEnd: 0,              // time when user won\n        timerStarted: false      // boolean to see if game has started\n    }\n\n    static duplicateCard = (numCards) => {\n        if (numCards === 12) {\n            return ['#0027F5', '#D53377', '#82F94E', '#F19135', '#EA3EE5', '#832EDF'].reduce((preValue, current, index, array) => {\n                return preValue.concat([current, current])\n            }, [])\n        } else if (numCards === 24) {\n            return ['#0027F5', '#D53377', '#82F94E', '#F19135', '#EA3EE5', '#832EDF', '#EB4526', '#75FAB1', '#5FD5FA', '#E8E14C', '#D1AAF9', '#F8FDB6'].reduce((preValue, current, index, array) => {\n                return preValue.concat([current, current])\n            }, [])\n        } else if (numCards === 32) {\n            //        blue      fuchsia     green      orange    pink       purple      red        seagreen  skyblue    yellow     baby pink  baby yel   baby purp   coral    teal green  teal\n            return ['#0027F5', '#D53377', '#82F94E', '#F19135', '#EA3EE5', '#832EDF', '#EB4526', '#75FAB1', '#5FD5FA', '#E8E14C', '#D1AAF9', '#F8FDB6', '#9A99F8', '#EF7E72', '#0CE87D', '#0CE8C8'].reduce((preValue, current, index, array) => {\n                return preValue.concat([current, current])\n            }, [])\n        }\n    }\n\n    handleClick = (event) => {\n        event.preventDefault()\n        var start = \"\"\n        if (!this.state.timerStarted) {   // get current time when first Card clicked\n            start = new Date().getTime()\n            this.setState({\n                timeStart: start,\n                timerStarted: true\n            })\n        }\n\n        const cardId = event.target.id\n        const newFlips = this.state.isFlipped.slice()\n        this.setState({\n            prevSelectedCard: this.state.shuffledCard[cardId],\n            prevCardId: cardId,\n        })\n\n        if (newFlips[cardId] === false) {\n            newFlips[cardId] = !newFlips[cardId]\n            this.setState(prevState => ({\n                isFlipped: newFlips,\n                clickCount: this.state.clickCount + 1\n            }))\n\n            if (this.state.clickCount === 2) {\n                this.setState({\n                    clickCount: 1,\n                    isDisabled: true,\n                    moveCount: this.state.moveCount + 1\n                })\n                const prevCardId = this.state.prevCardId\n                const newCard = this.state.shuffledCard[cardId]\n                const previousCard = this.state.prevSelectedCard\n                \n                this.isCardMatch(previousCard, newCard, prevCardId, cardId)\n            }\n        }\n    }\n\n    isCardMatch = (prevCard, newCard, prevCardId, newCardId) => {\n        if (prevCard === newCard) {\n            const hideCard = this.state.shuffledCard.slice()\n            hideCard[prevCardId] = -1\n            hideCard[newCardId] = -1\n            setTimeout(() => {\n                this.setState(prevState => ({\n                    isDisabled: false,\n                }))\n            }, 0)\n            if (this.didWin()) {\n                var end = new Date().getTime()\n                this.setState({\n                    hasWon: true,\n                    completed: true,\n                    timeEnd: end\n                })\n            }\n        } else {\n            const flipBack = this.state.isFlipped.slice()\n            flipBack[prevCardId] = false\n            flipBack[newCardId] = false\n            setTimeout(() => {\n                this.setState(prevState => ({\n                    isFlipped: flipBack,\n                    isDisabled: false\n                }))\n            }, 600)\n        }\n    }\n\n    restartGame = () => {\n        this.setState({\n            isFlipped: Array(this.props.numCards).fill(false),\n            shuffledCard: Game.duplicateCard(this.props.numCards).sort(() => Math.random() - 0.5),\n            clickCount: 1,\n            moveCount: 0,\n            prevSelectedCard: -1,\n            prevCardId: -1,\n            isDisabled: false,\n            hasWon: false,\n            completed: false,\n            timeStart: 0,\n            timeEnd: 0,\n            timerStarted: false\n        })\n    }\n\n    didWin = () => {\n        var found = 0;\n        for(var i = 0; i < this.state.isFlipped.length; i++) {\n            if (this.state.isFlipped[i] !== false) {\n                found += 1;\n            }\n        }\n        if (found >= this.props.numCards - 1) {\n            return true\n        } else { return false }\n    }\n\n    closeModalHandler = () => {\n        this.setState({\n            hasWon: false\n        })\n    }\n\n    render() {\n        var styles = {}\n        if (this.state.isDisabled) {\n            styles = { pointerEvents: \"none\" }\n        } else {\n            styles = {}\n        }\n\n        var classN = \"\"\n        if (this.props.numCols === 4) {\n            classN = \"grid-container easy\"\n        } else if (this.props.numCols === 6) {\n            classN = \"grid-container medium\"\n        } else if (this.props.numCols === 8) {\n            classN = \"grid-container hard\"\n        }\n\n        return (\n            <div className=\"page-container\">\n                <div>\n                    <div className={classN} style={styles}>\n                        {\n                            this.state.shuffledCard.map((cardNumber, index) =>\n                            <Card\n                                key={index}\n                                id={index}\n                                cardNumber={cardNumber}\n                                isFlipped={this.state.isFlipped[index]}\n                                handleClick={this.handleClick}\n                            />\n                            )\n                        }\n                    </div>\n                    <Commands hasCompleted={this.state.completed} changeDiff={this.props.changeDiff} restart={this.restartGame}/>\n\n                    <GameOver \n                        show={this.state.hasWon} \n                        moves={this.state.moveCount}\n                        time={this.state.timeEnd - this.state.timeStart}\n                        close={this.closeModalHandler} \n                    />\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Game","import React from 'react'\nimport ModalDiff from './components/modals/DifficultyModal'\nimport Header from './header/Header'\nimport Game from './components/Game'\n\nclass App extends React.Component {\n    state = {\n        numCards: 0,\n        level: -1,\n        numColumns: 4\n    }\n\n    changeDiff = () => {\n        this.setState({\n            level: -1\n        })\n    }\n\n    pickLevel = (event) => {\n        const {id} = event.target\n        if (id === \"easy\") {\n            this.setState({\n                numCards: 12,\n                level: 0,\n                numColumns: 4\n            })\n        } else if (id === \"med\") {\n            this.setState({\n                numCards: 24,\n                level: 1,\n                numColumns: 6\n            })\n        } else if (id === \"hard\") {\n            this.setState({\n                numCards: 32,\n                level: 2,\n                numColumns: 8\n            })\n        }\n    }\n\n    renderLevelChoice() {\n        return (\n            <ModalDiff\n                show={true}\n                close={this.closeModalHandler}\n                pickLevel={this.pickLevel}\n            />\n        )\n    }\n\n    render() {\n        return (\n            <div>\n                <Header />\n                {this.state.level === -1 ? this.renderLevelChoice() : \n                    <Game numCards={this.state.numCards} changeDiff={this.changeDiff} numCols={this.state.numColumns} />\n                }\n            </div>\n        )\n    }\n}\n\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/main.css';\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}